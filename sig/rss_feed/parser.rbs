module RssFeed
  class Parser
    @feed_urls: Array[String]

    attr_reader feed_urls: String
    attr_reader uri_parser: untyped
    attr_reader xml_parser: Nokogiri | untyped

    def initialize: (feed_urls: Array[String]) -> void

    def parse: -> DynamicObject

    private

    def add_attributes: -> void

    def create_item_info: ->  Hash[String, untyped]

    def extract_attributes: (node: Nokogiri::XML::NodeSet)-> Array[Hash[Symbol, Hash[Symbol, String]]]

    def extract_channel_info: (channel: Feed::Channel)-> Hash[Symbol, Hash[Symbol, String]]

    def extract_clean_value: (docs:  Nokogiri::XML::Document)-> String

    def extract_info: (feed: Feed::Item | Feed::Channel)-> Hash[Symbol, Hash[Symbol, String]]

    def extract_item_info: (items: Feed::Item)-> Array[Hash[Symbol, Hash[Symbol, String]]]

    def extract_items: (tag_data: Hash[Symbol, String])->  (Hash[Symbol, Hash[Symbol, String]] | String)

    def extract_nested_data: (nodes: Nokogiri::XML::NodeSet)-> Hash[Symbol, Hash[Symbol, String]]

    def extract_tag_data: (tag: String, feed_parse: Nokogiri::XML::Document)-> Hash[Symbol, String | bool| Nokogiri::XML::Document]

    def fetch_and_parse_xml: -> Nokogiri::XML::Document

    def handle_error: (error: string)-> void

    def skip_extraction?: -> bool

    def skip_items?: -> bool
  end
end